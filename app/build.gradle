apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.6.201602180812"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/android/databinding/**',
                              'com/android/databinding/library/baseAdapters'])
        })
    }
}



android {
    compileSdkVersion 28

    dataBinding {
        enabled = true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.movieapp.huxymovies"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }

    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayout"
    implementation "com.android.support:design:$rootProject.supportLibVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaLibrary"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxJavaAndroid"
    implementation "android.arch.paging:runtime:$rootProject.pagingLibrary"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibVersion"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitLibrary"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.gsonLibrary"
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    implementation "android.arch.lifecycle:viewmodel:$rootProject.archLifecycleVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoCore"
    implementation "com.github.bumptech.glide:glide:$rootProject.glideLibrary"
    implementation "android.arch.persistence.room:runtime:$rootProject.archRoomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.archRoomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.archRoomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.archRoomVersion"
    androidTestImplementation "android.arch.core:core-testing:1.1.0"
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "junit:junit:$rootProject.junit"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoCore"
    testImplementation("com.squareup.okhttp3:mockwebserver:$rootProject.mockServer")
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideLibrary"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoLibrary"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoLibrary"
    androidTestImplementation "com.android.support.test:rules:$rootProject.testRunner"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoCore"


}
repositories {
    mavenCentral()
}

apply plugin: 'com.android.application' //or apply plugin: 'java'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
